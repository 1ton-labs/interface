/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  RolesAuthority,
  RolesAuthorityInterface,
} from "../../../../../contracts/cyberconnect/dependencies/solmate/RolesAuthority";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract Authority",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract Authority",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "PublicCapabilityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "RoleCapabilityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "UserRoleUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract Authority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
    ],
    name: "canCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
    ],
    name: "doesRoleHaveCapability",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
    ],
    name: "doesUserHaveRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "getRolesWithCapability",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getUserRoles",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "isCapabilityPublic",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Authority",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setPublicCapability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setRoleCapability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setUserRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e0138038062001e018339818101604052810190620000379190620003ff565b60008060019054906101000a900460ff16159050808015620000695750600160008054906101000a900460ff1660ff16105b80620000a557506200008630620001a160201b62000e411760201c565b158015620000a45750600160008054906101000a900460ff1660ff16145b5b620000e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000de90620004cd565b60405180910390fd5b60016000806101000a81548160ff021916908360ff160217905550801562000125576001600060016101000a81548160ff0219169083151502179055505b6200013c8383620001c460201b62000e641760201c565b8015620001985760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516200018f919062000549565b60405180910390a15b505050620005fe565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1662000216576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200020d90620005dc565b60405180910390fd5b81600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a38073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019860405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003828262000355565b9050919050565b620003948162000375565b8114620003a057600080fd5b50565b600081519050620003b48162000389565b92915050565b6000620003c78262000375565b9050919050565b620003d981620003ba565b8114620003e557600080fd5b50565b600081519050620003f981620003ce565b92915050565b6000806040838503121562000419576200041862000350565b5b60006200042985828601620003a3565b92505060206200043c85828601620003e8565b9150509250929050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000620004b5602e8362000446565b9150620004c28262000457565b604082019050919050565b60006020820190508181036000830152620004e881620004a6565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000620005316200052b6200052584620004ef565b62000506565b620004f9565b9050919050565b620005438162000510565b82525050565b600060208201905062000560600083018462000538565b92915050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000620005c4602b8362000446565b9150620005d18262000566565b604082019050919050565b60006020820190508181036000830152620005f781620005b5565b9050919050565b6117f3806200060e6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637d40583d1161008c578063b700961311610066578063b700961314610222578063bf7e214f14610252578063c6b0263e14610270578063ea7ca2761461028c576100cf565b80637d40583d146101b85780638da5cb5b146101d4578063b4bad06a146101f2576100cf565b806306a36aee146100d457806313af4035146101045780632f47571f1461012057806367aff484146101505780637917b7941461016c5780637a9e5e4b1461019c575b600080fd5b6100ee60048036038101906100e99190611190565b6102bc565b6040516100fb91906111d6565b60405180910390f35b61011e60048036038101906101199190611190565b6102d4565b005b61013a60048036038101906101359190611249565b6103df565b60405161014791906112a4565b60405180910390f35b61016a60048036038101906101659190611324565b61040e565b005b61018660048036038101906101819190611249565b61058d565b60405161019391906111d6565b60405180910390f35b6101b660048036038101906101b191906113b5565b6105b2565b005b6101d260048036038101906101cd91906113e2565b6107ab565b005b6101dc6109e9565b6040516101e99190611458565b60405180910390f35b61020c60048036038101906102079190611473565b610a0f565b60405161021991906112a4565b60405180910390f35b61023c600480360381019061023791906114c6565b610ab8565b60405161024991906112a4565b60405180910390f35b61025a610c3c565b6040516102679190611578565b60405180910390f35b61028a60048036038101906102859190611593565b610c62565b005b6102a660048036038101906102a191906115e6565b610de8565b6040516102b391906112a4565b60405180910390f35b60026020528060005260406000206000915090505481565b610302336000357fffffffff0000000000000000000000000000000000000000000000000000000016610fed565b610341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033890611683565b60405180910390fd5b80600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a350565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b61043c336000357fffffffff0000000000000000000000000000000000000000000000000000000016610fed565b61047b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047290611683565b60405180910390fd5b80156104dd578160ff166001901b60001b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282541792505081905550610536565b8160ff166001901b60001b19600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825416925050819055505b8160ff168373ffffffffffffffffffffffffffffffffffffffff167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf28360405161058091906112a4565b60405180910390a3505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106ce5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b700961333306000357fffffffff00000000000000000000000000000000000000000000000000000000166040518463ffffffff1660e01b815260040161068c939291906116b2565b602060405180830381865afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd91906116fe565b5b61070d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070490611683565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019860405160405180910390a350565b6107d9336000357fffffffff0000000000000000000000000000000000000000000000000000000016610fed565b610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080f90611683565b60405180910390fd5b80156108c9578360ff166001901b60001b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008282541792505081905550610971565b8360ff166001901b60001b19600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020600082825416925050819055505b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168373ffffffffffffffffffffffffffffffffffffffff168560ff167fa52ea92e6e955aa8ac66420b86350f7139959adfcc7e6a14eee1bd116d09860e846040516109db91906112a4565b60405180910390a450505050565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060018560ff16600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000205460001c901c16141590509392505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff1680610c335750600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002054600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054166000801b14155b90509392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c90336000357fffffffff0000000000000000000000000000000000000000000000000000000016610fed565b610ccf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc690611683565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168373ffffffffffffffffffffffffffffffffffffffff167f950a343f5d10445e82a71036d3f4fb3016180a25805141932543b83e2078a93e83604051610ddb91906112a4565b60405180910390a3505050565b60008060018360ff16600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460001c901c161415905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610eb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaa9061179d565b60405180910390fd5b81600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a38073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019860405160405180910390a35050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156110cc57508073ffffffffffffffffffffffffffffffffffffffff1663b70096138530866040518463ffffffff1660e01b815260040161108a939291906116b2565b602060405180830381865afa1580156110a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cb91906116fe565b5b806111245750600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061115d82611132565b9050919050565b61116d81611152565b811461117857600080fd5b50565b60008135905061118a81611164565b92915050565b6000602082840312156111a6576111a561112d565b5b60006111b48482850161117b565b91505092915050565b6000819050919050565b6111d0816111bd565b82525050565b60006020820190506111eb60008301846111c7565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611226816111f1565b811461123157600080fd5b50565b6000813590506112438161121d565b92915050565b600080604083850312156112605761125f61112d565b5b600061126e8582860161117b565b925050602061127f85828601611234565b9150509250929050565b60008115159050919050565b61129e81611289565b82525050565b60006020820190506112b96000830184611295565b92915050565b600060ff82169050919050565b6112d5816112bf565b81146112e057600080fd5b50565b6000813590506112f2816112cc565b92915050565b61130181611289565b811461130c57600080fd5b50565b60008135905061131e816112f8565b92915050565b60008060006060848603121561133d5761133c61112d565b5b600061134b8682870161117b565b935050602061135c868287016112e3565b925050604061136d8682870161130f565b9150509250925092565b600061138282611152565b9050919050565b61139281611377565b811461139d57600080fd5b50565b6000813590506113af81611389565b92915050565b6000602082840312156113cb576113ca61112d565b5b60006113d9848285016113a0565b91505092915050565b600080600080608085870312156113fc576113fb61112d565b5b600061140a878288016112e3565b945050602061141b8782880161117b565b935050604061142c87828801611234565b925050606061143d8782880161130f565b91505092959194509250565b61145281611152565b82525050565b600060208201905061146d6000830184611449565b92915050565b60008060006060848603121561148c5761148b61112d565b5b600061149a868287016112e3565b93505060206114ab8682870161117b565b92505060406114bc86828701611234565b9150509250925092565b6000806000606084860312156114df576114de61112d565b5b60006114ed8682870161117b565b93505060206114fe8682870161117b565b925050604061150f86828701611234565b9150509250925092565b6000819050919050565b600061153e61153961153484611132565b611519565b611132565b9050919050565b600061155082611523565b9050919050565b600061156282611545565b9050919050565b61157281611557565b82525050565b600060208201905061158d6000830184611569565b92915050565b6000806000606084860312156115ac576115ab61112d565b5b60006115ba8682870161117b565b93505060206115cb86828701611234565b92505060406115dc8682870161130f565b9150509250925092565b600080604083850312156115fd576115fc61112d565b5b600061160b8582860161117b565b925050602061161c858286016112e3565b9150509250929050565b600082825260208201905092915050565b7f554e415554484f52495a45440000000000000000000000000000000000000000600082015250565b600061166d600c83611626565b915061167882611637565b602082019050919050565b6000602082019050818103600083015261169c81611660565b9050919050565b6116ac816111f1565b82525050565b60006060820190506116c76000830186611449565b6116d46020830185611449565b6116e160408301846116a3565b949350505050565b6000815190506116f8816112f8565b92915050565b6000602082840312156117145761171361112d565b5b6000611722848285016116e9565b91505092915050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611787602b83611626565b91506117928261172b565b604082019050919050565b600060208201905081810360008301526117b68161177a565b905091905056fea264697066735822122031d327cdba0bbd2cd2706f10e9e6bef706a5a57f4e09c3ea5065f68e97c0e5a064736f6c63430008110033";

type RolesAuthorityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RolesAuthorityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RolesAuthority__factory extends ContractFactory {
  constructor(...args: RolesAuthorityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RolesAuthority> {
    return super.deploy(
      _owner,
      _authority,
      overrides || {}
    ) as Promise<RolesAuthority>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _authority, overrides || {});
  }
  override attach(address: string): RolesAuthority {
    return super.attach(address) as RolesAuthority;
  }
  override connect(signer: Signer): RolesAuthority__factory {
    return super.connect(signer) as RolesAuthority__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RolesAuthorityInterface {
    return new utils.Interface(_abi) as RolesAuthorityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RolesAuthority {
    return new Contract(address, _abi, signerOrProvider) as RolesAuthority;
  }
}
