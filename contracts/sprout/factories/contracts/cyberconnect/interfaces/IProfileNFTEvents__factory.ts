/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IProfileNFTEvents,
  IProfileNFTEventsInterface,
} from "../../../../contracts/cyberconnect/interfaces/IProfileNFTEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "essenceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "preData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "postData",
        type: "bytes",
      },
    ],
    name: "CollectEssence",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "handle",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "avatar",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "CreateProfile",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "essenceId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "essenceNFT",
        type: "address",
      },
    ],
    name: "DeployEssenceNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subscribeNFT",
        type: "address",
      },
    ],
    name: "DeploySubscribeNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "Initialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "essenceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "essenceTokenURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "essenceMw",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "prepareReturnData",
        type: "bytes",
      },
    ],
    name: "RegisterEssence",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newAvatar",
        type: "string",
      },
    ],
    name: "SetAvatar",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "essenceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mw",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "prepareReturnData",
        type: "bytes",
      },
    ],
    name: "SetEssenceData",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newMetadata",
        type: "string",
      },
    ],
    name: "SetMetadata",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newDescriptor",
        type: "address",
      },
    ],
    name: "SetNFTDescriptor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "preOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "SetNamespaceOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "prevApproved",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "SetOperatorApproval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "SetPrimaryProfile",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mw",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "prepareReturnData",
        type: "bytes",
      },
    ],
    name: "SetSubscribeData",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "profileIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "preDatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "postDatas",
        type: "bytes[]",
      },
    ],
    name: "Subscribe",
    type: "event",
  },
] as const;

export class IProfileNFTEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IProfileNFTEventsInterface {
    return new utils.Interface(_abi) as IProfileNFTEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IProfileNFTEvents {
    return new Contract(address, _abi, signerOrProvider) as IProfileNFTEvents;
  }
}
