/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SubscribePaidMw,
  SubscribePaidMwInterface,
} from "../../../../../contracts/cyberconnect/middlewares/subscribe/SubscribePaidMw";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "sproutTreasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isRedirect",
        type: "bool",
      },
    ],
    name: "FeeRedirect",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "namespace",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "nftRequired",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "SubscribePaidMwSet",
    type: "event",
  },
  {
    inputs: [],
    name: "SPROUT_TREASURY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TREASURY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isFeeRedirect",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "postProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "preProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRedirect",
        type: "bool",
      },
    ],
    name: "setFeeRedirect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sproutTreasury",
        type: "address",
      },
    ],
    name: "setSproutTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "setSubscribeMwData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200222138038062002221833981810160405281019062000037919062000280565b8181620000596200004d6200014a60201b60201c565b6200015260201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000cb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c29062000328565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200034a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000248826200021b565b9050919050565b6200025a816200023b565b81146200026657600080fd5b50565b6000815190506200027a816200024f565b92915050565b600080604083850312156200029a576200029962000216565b5b6000620002aa8582860162000269565b9250506020620002bd8582860162000269565b9150509250929050565b600082825260208201905092915050565b7f5a45524f5f54524541535552595f414444524553530000000000000000000000600082015250565b600062000310601583620002c7565b91506200031d82620002d8565b602082019050919050565b60006020820190508181036000830152620003438162000301565b9050919050565b608051611ea66200037b600039600081816106b701528181610c9201528181610d350152610e540152611ea66000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638d4671f2116100715780638d4671f21461013e5780638da5cb5b1461016e57806395d4e4e61461018c578063a20a00e7146101a8578063f2fde38b146101c6578063f6e69f85146101e2576100a9565b806302c612b2146100ae5780631fd4be9d146100ca5780632d2c5565146100fa5780635345860214610118578063715018a614610134575b600080fd5b6100c860048036038101906100c391906112be565b6101fe565b005b6100e460048036038101906100df9190611363565b61026d565b6040516100f1919061145c565b60405180910390f35b6101026106b5565b60405161010f91906114bf565b60405180910390f35b610132600480360381019061012d9190611506565b6106d9565b005b61013c610ab7565b005b6101586004803603810190610153919061158e565b610acb565b60405161016591906115ca565b60405180910390f35b610176610aeb565b60405161018391906114bf565b60405180910390f35b6101a660048036038101906101a19190611506565b610b14565b005b6101b0610b1b565b6040516101bd91906114bf565b60405180910390f35b6101e060048036038101906101db91906115e5565b610b41565b005b6101fc60048036038101906101f791906115e5565b610bc4565b005b610206610c10565b806002600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f787a886c085982272206f2f17ce366286a44697c075ccd828caa728e14084fc38260405161026191906115ca565b60405180910390a25050565b6060600080600080600087878101906102869190611650565b94509450945094509450600085036102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca90611728565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610342576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033990611794565b60405180910390fd5b61034b83610c8e565b61038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190611800565b60405180910390fd5b84600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b81526020019081526020016000206000018190555083600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002060020160146101000a81548160ff02191690831515021790555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084893373ffffffffffffffffffffffffffffffffffffffff167f63b91f8c521ac51a03dd36e2a171a58f8128118638a34635feca702fdb10a1e5878787876040516106519493929190611820565b60405180910390a4600067ffffffffffffffff81111561067457610673611865565b5b6040519080825280601f01601f1916602001820160405280156106a65781602001600182028036833780820191505090505b50955050505050509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600001549050600061271061ffff166107ba610d31565b836107c591906118c3565b6107cf919061194c565b9050600081836107df919061197d565b9050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a815260200190815260200160002060020160149054906101000a900460ff1615610977576000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318a6040518263ffffffff1660e01b81526004016108f591906114bf565b602060405180830381865afa158015610912573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093691906119c6565b11610976576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096d90611a3f565b60405180910390fd5b5b6000600260008b815260200190815260200160002060009054906101000a900460ff16156109c957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610a40565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b610a6d8982848873ffffffffffffffffffffffffffffffffffffffff16610dc7909392919063ffffffff16565b6000831115610aab57610aaa89610a82610e50565b858873ffffffffffffffffffffffffffffffffffffffff16610dc7909392919063ffffffff16565b5b50505050505050505050565b610abf610c10565b610ac96000610ee6565b565b60026020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b49610c10565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baf90611ad1565b60405180910390fd5b610bc181610ee6565b50565b610bcc610c10565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610c18610faa565b73ffffffffffffffffffffffffffffffffffffffff16610c36610aeb565b73ffffffffffffffffffffffffffffffffffffffff1614610c8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8390611b3d565b60405180910390fd5b565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635a195d19836040518263ffffffff1660e01b8152600401610ce991906114bf565b602060405180830381865afa158015610d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a9190611b72565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329070c6d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc291906119c6565b905090565b610e4a846323b872dd60e01b858585604051602401610de893929190611bae565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fb2565b50505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e00246046040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ebd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee19190611bfa565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000611014826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166110799092919063ffffffff16565b905060008151111561107457808060200190518101906110349190611b72565b611073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106a90611c99565b60405180910390fd5b5b505050565b60606110888484600085611091565b90509392505050565b6060824710156110d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cd90611d2b565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516110ff9190611d87565b60006040518083038185875af1925050503d806000811461113c576040519150601f19603f3d011682016040523d82523d6000602084013e611141565b606091505b50915091506111528783838761115e565b92505050949350505050565b606083156111c05760008351036111b857611178856111d3565b6111b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ae90611dea565b60405180910390fd5b5b8290506111cb565b6111ca83836111f6565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156112095781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123d9190611e4e565b60405180910390fd5b600080fd5b600080fd5b6000819050919050565b61126381611250565b811461126e57600080fd5b50565b6000813590506112808161125a565b92915050565b60008115159050919050565b61129b81611286565b81146112a657600080fd5b50565b6000813590506112b881611292565b92915050565b600080604083850312156112d5576112d4611246565b5b60006112e385828601611271565b92505060206112f4858286016112a9565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112611323576113226112fe565b5b8235905067ffffffffffffffff8111156113405761133f611303565b5b60208301915083600182028301111561135c5761135b611308565b5b9250929050565b60008060006040848603121561137c5761137b611246565b5b600061138a86828701611271565b935050602084013567ffffffffffffffff8111156113ab576113aa61124b565b5b6113b78682870161130d565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156113fd5780820151818401526020810190506113e2565b8381111561140c576000848401525b50505050565b6000601f19601f8301169050919050565b600061142e826113c3565b61143881856113ce565b93506114488185602086016113df565b61145181611412565b840191505092915050565b600060208201905081810360008301526114768184611423565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114a98261147e565b9050919050565b6114b98161149e565b82525050565b60006020820190506114d460008301846114b0565b92915050565b6114e38161149e565b81146114ee57600080fd5b50565b600081359050611500816114da565b92915050565b60008060008060006080868803121561152257611521611246565b5b600061153088828901611271565b9550506020611541888289016114f1565b9450506040611552888289016114f1565b935050606086013567ffffffffffffffff8111156115735761157261124b565b5b61157f8882890161130d565b92509250509295509295909350565b6000602082840312156115a4576115a3611246565b5b60006115b284828501611271565b91505092915050565b6115c481611286565b82525050565b60006020820190506115df60008301846115bb565b92915050565b6000602082840312156115fb576115fa611246565b5b6000611609848285016114f1565b91505092915050565b600061161d8261147e565b9050919050565b61162d81611612565b811461163857600080fd5b50565b60008135905061164a81611624565b92915050565b600080600080600060a0868803121561166c5761166b611246565b5b600061167a88828901611271565b955050602061168b8882890161163b565b945050604061169c8882890161163b565b93505060606116ad888289016112a9565b92505060806116be8882890161163b565b9150509295509295909350565b600082825260208201905092915050565b7f494e56414c49445f414d4f554e54000000000000000000000000000000000000600082015250565b6000611712600e836116cb565b915061171d826116dc565b602082019050919050565b6000602082019050818103600083015261174181611705565b9050919050565b7f494e56414c49445f414444524553530000000000000000000000000000000000600082015250565b600061177e600f836116cb565b915061178982611748565b602082019050919050565b600060208201905081810360008301526117ad81611771565b9050919050565b7f43555252454e43595f4e4f545f414c4c4f574544000000000000000000000000600082015250565b60006117ea6014836116cb565b91506117f5826117b4565b602082019050919050565b60006020820190508181036000830152611819816117dd565b9050919050565b600060808201905061183560008301876114b0565b61184260208301866114b0565b61184f60408301856115bb565b61185c60608301846114b0565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118ce82611250565b91506118d983611250565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561191257611911611894565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061195782611250565b915061196283611250565b9250826119725761197161191d565b5b828204905092915050565b600061198882611250565b915061199383611250565b9250828210156119a6576119a5611894565b5b828203905092915050565b6000815190506119c08161125a565b92915050565b6000602082840312156119dc576119db611246565b5b60006119ea848285016119b1565b91505092915050565b7f4e4f5f52455155495245445f4e46540000000000000000000000000000000000600082015250565b6000611a29600f836116cb565b9150611a34826119f3565b602082019050919050565b60006020820190508181036000830152611a5881611a1c565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611abb6026836116cb565b9150611ac682611a5f565b604082019050919050565b60006020820190508181036000830152611aea81611aae565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611b276020836116cb565b9150611b3282611af1565b602082019050919050565b60006020820190508181036000830152611b5681611b1a565b9050919050565b600081519050611b6c81611292565b92915050565b600060208284031215611b8857611b87611246565b5b6000611b9684828501611b5d565b91505092915050565b611ba881611250565b82525050565b6000606082019050611bc360008301866114b0565b611bd060208301856114b0565b611bdd6040830184611b9f565b949350505050565b600081519050611bf4816114da565b92915050565b600060208284031215611c1057611c0f611246565b5b6000611c1e84828501611be5565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611c83602a836116cb565b9150611c8e82611c27565b604082019050919050565b60006020820190508181036000830152611cb281611c76565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611d156026836116cb565b9150611d2082611cb9565b604082019050919050565b60006020820190508181036000830152611d4481611d08565b9050919050565b600081905092915050565b6000611d61826113c3565b611d6b8185611d4b565b9350611d7b8185602086016113df565b80840191505092915050565b6000611d938284611d56565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611dd4601d836116cb565b9150611ddf82611d9e565b602082019050919050565b60006020820190508181036000830152611e0381611dc7565b9050919050565b600081519050919050565b6000611e2082611e0a565b611e2a81856116cb565b9350611e3a8185602086016113df565b611e4381611412565b840191505092915050565b60006020820190508181036000830152611e688184611e15565b90509291505056fea26469706673582212207df6963820640787e1b98bd2af6f3dd449cbf521a79872048ab9a433f322fd7f64736f6c634300080e0033";

type SubscribePaidMwConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubscribePaidMwConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubscribePaidMw__factory extends ContractFactory {
  constructor(...args: SubscribePaidMwConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    treasury: PromiseOrValue<string>,
    sproutTreasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SubscribePaidMw> {
    return super.deploy(
      treasury,
      sproutTreasury,
      overrides || {}
    ) as Promise<SubscribePaidMw>;
  }
  override getDeployTransaction(
    treasury: PromiseOrValue<string>,
    sproutTreasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      treasury,
      sproutTreasury,
      overrides || {}
    );
  }
  override attach(address: string): SubscribePaidMw {
    return super.attach(address) as SubscribePaidMw;
  }
  override connect(signer: Signer): SubscribePaidMw__factory {
    return super.connect(signer) as SubscribePaidMw__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscribePaidMwInterface {
    return new utils.Interface(_abi) as SubscribePaidMwInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubscribePaidMw {
    return new Contract(address, _abi, signerOrProvider) as SubscribePaidMw;
  }
}
