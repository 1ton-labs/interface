/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  CollectPaidMw,
  CollectPaidMwInterface,
} from "../../../../../contracts/cyberconnect/middlewares/essence/CollectPaidMw";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "sproutTreasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "namespace",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "essenceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "subscribeRequired",
        type: "bool",
      },
    ],
    name: "CollectPaidMwSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isRedirect",
        type: "bool",
      },
    ],
    name: "FeeRedirect",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "SPROUT_TREASURY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TREASURY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isFeeRedirect",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "postProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "essenceId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "preProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "essenceId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "setEssenceMwData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRedirect",
        type: "bool",
      },
    ],
    name: "setFeeRedirect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sproutTreasury",
        type: "address",
      },
    ],
    name: "setSproutTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200257938038062002579833981810160405281019062000037919062000280565b8181620000596200004d6200014a60201b60201c565b6200015260201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000cb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c29062000328565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200034a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000248826200021b565b9050919050565b6200025a816200023b565b81146200026657600080fd5b50565b6000815190506200027a816200024f565b92915050565b600080604083850312156200029a576200029962000216565b5b6000620002aa8582860162000269565b9250506020620002bd8582860162000269565b9150509250929050565b600082825260208201905092915050565b7f5a45524f5f54524541535552595f414444524553530000000000000000000000600082015250565b600062000310601583620002c7565b91506200031d82620002d8565b602082019050919050565b60006020820190508181036000830152620003438162000301565b9050919050565b6080516121fe6200037b6000396000818161026f01528181610e6b01528181610f0e015261116d01526121fe6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461013e578063a20a00e71461015c578063a58d4f0e1461017a578063f2dd081b146101aa578063f2fde38b146101c6578063f6e69f85146101e2576100a9565b806302c612b2146100ae5780632d2c5565146100ca5780632eae9262146100e8578063715018a6146101045780638d4671f21461010e575b600080fd5b6100c860048036038101906100c39190611513565b6101fe565b005b6100d261026d565b6040516100df9190611594565b60405180910390f35b61010260048036038101906100fd9190611640565b610291565b005b61010c610299565b005b610128600480360381019061012391906116da565b6102ad565b6040516101359190611716565b60405180910390f35b6101466102cd565b6040516101539190611594565b60405180910390f35b6101646102f6565b6040516101719190611594565b60405180910390f35b610194600480360381019061018f9190611731565b61031c565b6040516101a1919061183e565b60405180910390f35b6101c460048036038101906101bf9190611640565b610782565b005b6101e060048036038101906101db9190611860565b610c56565b005b6101fc60048036038101906101f79190611860565b610cd9565b005b610206610d25565b806002600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f787a886c085982272206f2f17ce366286a44697c075ccd828caa728e14084fc3826040516102619190611716565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b505050505050565b6102a1610d25565b6102ab6000610da3565b565b60026020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000806000806000878781019061033591906118cb565b9450945094509450945060008403610382576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610379906119a3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e890611a0f565b60405180910390fd5b6103fa82610e67565b610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043090611a7b565b60405180910390fd5b84600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060008b81526020019081526020016000206000018190555083600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060008b81526020019081526020016000206002018190555082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060008b815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060008b815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060008b815260200190815260200160002060040160146101000a81548160ff021916908315150217905550888a3373ffffffffffffffffffffffffffffffffffffffff167fe0bed9059cabc761c890d3878a979e2dcada6865df5703a1f09f3363f3c555f9888888888860405161071d959493929190611aaa565b60405180910390a4600067ffffffffffffffff8111156107405761073f611afd565b5b6040519080825280601f01601f1916602001820160405280156107725781602001600182028036833780820191505090505b5095505050505050949350505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600087815260200190815260200160002060010154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008981526020019081526020016000206000888152602001908152602001600020600001546108589190611b5b565b11610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088f90611bdb565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600087815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008981526020019081526020016000206000888152602001908152602001600020600201549050600061271061ffff1661099b610f0a565b836109a69190611bfb565b6109b09190611c84565b9050600081836109c09190611b5b565b905060011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060008b815260200190815260200160002060040160149054906101000a900460ff16151503610a8a57610a4a338b8a610fa0565b610a89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8090611d01565b60405180910390fd5b5b6000600260008c815260200190815260200160002060009054906101000a900460ff1615610adc57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610b64565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060008b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b610b918982848873ffffffffffffffffffffffffffffffffffffffff166110e0909392919063ffffffff16565b6000831115610bcf57610bce89610ba6611169565b858873ffffffffffffffffffffffffffffffffffffffff166110e0909392919063ffffffff16565b5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060008b81526020019081526020016000206001016000815480929190610c4490611d21565b91905055505050505050505050505050565b610c5e610d25565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ccd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc490611ddb565b60405180910390fd5b610cd681610da3565b50565b610ce1610d25565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610d2d6111ff565b73ffffffffffffffffffffffffffffffffffffffff16610d4b6102cd565b73ffffffffffffffffffffffffffffffffffffffff1614610da1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9890611e47565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635a195d19836040518263ffffffff1660e01b8152600401610ec29190611594565b602060405180830381865afa158015610edf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f039190611e7c565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329070c6d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9b9190611ebe565b905090565b6000808473ffffffffffffffffffffffffffffffffffffffff1663f4954aef856040518263ffffffff1660e01b8152600401610fdc9190611eeb565b602060405180830381865afa158015610ff9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101d9190611f1b565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156110d6575060008173ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016110929190611594565b602060405180830381865afa1580156110af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d39190611ebe565b14155b9150509392505050565b611163846323b872dd60e01b85858560405160240161110193929190611f48565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611207565b50505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e00246046040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fa9190611f1b565b905090565b600033905090565b6000611269826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112ce9092919063ffffffff16565b90506000815111156112c957808060200190518101906112899190611e7c565b6112c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112bf90611ff1565b60405180910390fd5b5b505050565b60606112dd84846000856112e6565b90509392505050565b60608247101561132b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132290612083565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161135491906120df565b60006040518083038185875af1925050503d8060008114611391576040519150601f19603f3d011682016040523d82523d6000602084013e611396565b606091505b50915091506113a7878383876113b3565b92505050949350505050565b6060831561141557600083510361140d576113cd85611428565b61140c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140390612142565b60405180910390fd5b5b829050611420565b61141f838361144b565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561145e5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149291906121a6565b60405180910390fd5b600080fd5b600080fd5b6000819050919050565b6114b8816114a5565b81146114c357600080fd5b50565b6000813590506114d5816114af565b92915050565b60008115159050919050565b6114f0816114db565b81146114fb57600080fd5b50565b60008135905061150d816114e7565b92915050565b6000806040838503121561152a5761152961149b565b5b6000611538858286016114c6565b9250506020611549858286016114fe565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061157e82611553565b9050919050565b61158e81611573565b82525050565b60006020820190506115a96000830184611585565b92915050565b6115b881611573565b81146115c357600080fd5b50565b6000813590506115d5816115af565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611600576115ff6115db565b5b8235905067ffffffffffffffff81111561161d5761161c6115e0565b5b602083019150836001820283011115611639576116386115e5565b5b9250929050565b60008060008060008060a0878903121561165d5761165c61149b565b5b600061166b89828a016114c6565b965050602061167c89828a016114c6565b955050604061168d89828a016115c6565b945050606061169e89828a016115c6565b935050608087013567ffffffffffffffff8111156116bf576116be6114a0565b5b6116cb89828a016115ea565b92509250509295509295509295565b6000602082840312156116f0576116ef61149b565b5b60006116fe848285016114c6565b91505092915050565b611710816114db565b82525050565b600060208201905061172b6000830184611707565b92915050565b6000806000806060858703121561174b5761174a61149b565b5b6000611759878288016114c6565b945050602061176a878288016114c6565b935050604085013567ffffffffffffffff81111561178b5761178a6114a0565b5b611797878288016115ea565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b838110156117df5780820151818401526020810190506117c4565b838111156117ee576000848401525b50505050565b6000601f19601f8301169050919050565b6000611810826117a5565b61181a81856117b0565b935061182a8185602086016117c1565b611833816117f4565b840191505092915050565b600060208201905081810360008301526118588184611805565b905092915050565b6000602082840312156118765761187561149b565b5b6000611884848285016115c6565b91505092915050565b600061189882611553565b9050919050565b6118a88161188d565b81146118b357600080fd5b50565b6000813590506118c58161189f565b92915050565b600080600080600060a086880312156118e7576118e661149b565b5b60006118f5888289016114c6565b9550506020611906888289016114c6565b9450506040611917888289016118b6565b9350506060611928888289016118b6565b9250506080611939888289016114fe565b9150509295509295909350565b600082825260208201905092915050565b7f494e56414c49445f414d4f554e54000000000000000000000000000000000000600082015250565b600061198d600e83611946565b915061199882611957565b602082019050919050565b600060208201905081810360008301526119bc81611980565b9050919050565b7f494e56414c49445f414444524553530000000000000000000000000000000000600082015250565b60006119f9600f83611946565b9150611a04826119c3565b602082019050919050565b60006020820190508181036000830152611a28816119ec565b9050919050565b7f43555252454e43595f4e4f545f414c4c4f574544000000000000000000000000600082015250565b6000611a65601483611946565b9150611a7082611a2f565b602082019050919050565b60006020820190508181036000830152611a9481611a58565b9050919050565b611aa4816114a5565b82525050565b600060a082019050611abf6000830188611a9b565b611acc6020830187611a9b565b611ad96040830186611585565b611ae66060830185611585565b611af36080830184611707565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b66826114a5565b9150611b71836114a5565b925082821015611b8457611b83611b2c565b5b828203905092915050565b7f434f4c4c4543545f4c494d49545f455843454544454400000000000000000000600082015250565b6000611bc5601683611946565b9150611bd082611b8f565b602082019050919050565b60006020820190508181036000830152611bf481611bb8565b9050919050565b6000611c06826114a5565b9150611c11836114a5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c4a57611c49611b2c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c8f826114a5565b9150611c9a836114a5565b925082611caa57611ca9611c55565b5b828204905092915050565b7f4e4f545f53554253435249424544000000000000000000000000000000000000600082015250565b6000611ceb600e83611946565b9150611cf682611cb5565b602082019050919050565b60006020820190508181036000830152611d1a81611cde565b9050919050565b6000611d2c826114a5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d5e57611d5d611b2c565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611dc5602683611946565b9150611dd082611d69565b604082019050919050565b60006020820190508181036000830152611df481611db8565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611e31602083611946565b9150611e3c82611dfb565b602082019050919050565b60006020820190508181036000830152611e6081611e24565b9050919050565b600081519050611e76816114e7565b92915050565b600060208284031215611e9257611e9161149b565b5b6000611ea084828501611e67565b91505092915050565b600081519050611eb8816114af565b92915050565b600060208284031215611ed457611ed361149b565b5b6000611ee284828501611ea9565b91505092915050565b6000602082019050611f006000830184611a9b565b92915050565b600081519050611f15816115af565b92915050565b600060208284031215611f3157611f3061149b565b5b6000611f3f84828501611f06565b91505092915050565b6000606082019050611f5d6000830186611585565b611f6a6020830185611585565b611f776040830184611a9b565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611fdb602a83611946565b9150611fe682611f7f565b604082019050919050565b6000602082019050818103600083015261200a81611fce565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061206d602683611946565b915061207882612011565b604082019050919050565b6000602082019050818103600083015261209c81612060565b9050919050565b600081905092915050565b60006120b9826117a5565b6120c381856120a3565b93506120d38185602086016117c1565b80840191505092915050565b60006120eb82846120ae565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061212c601d83611946565b9150612137826120f6565b602082019050919050565b6000602082019050818103600083015261215b8161211f565b9050919050565b600081519050919050565b600061217882612162565b6121828185611946565b93506121928185602086016117c1565b61219b816117f4565b840191505092915050565b600060208201905081810360008301526121c0818461216d565b90509291505056fea2646970667358221220c0d60e56f41e534f3ac01c8efa035f138f7dd4ff6b44e5ee9c724a9e575acb8764736f6c634300080e0033";

type CollectPaidMwConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollectPaidMwConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CollectPaidMw__factory extends ContractFactory {
  constructor(...args: CollectPaidMwConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    treasury: PromiseOrValue<string>,
    sproutTreasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CollectPaidMw> {
    return super.deploy(
      treasury,
      sproutTreasury,
      overrides || {}
    ) as Promise<CollectPaidMw>;
  }
  override getDeployTransaction(
    treasury: PromiseOrValue<string>,
    sproutTreasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      treasury,
      sproutTreasury,
      overrides || {}
    );
  }
  override attach(address: string): CollectPaidMw {
    return super.attach(address) as CollectPaidMw;
  }
  override connect(signer: Signer): CollectPaidMw__factory {
    return super.connect(signer) as CollectPaidMw__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectPaidMwInterface {
    return new utils.Interface(_abi) as CollectPaidMwInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CollectPaidMw {
    return new Contract(address, _abi, signerOrProvider) as CollectPaidMw;
  }
}
